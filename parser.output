State 32 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: code

    2 code: statement code
    3     | /* empty */

    4 statement: definition
    5          | assignment
    6          | print_statement
    7          | if_statement
    8          | for_loop
    9          | while_loop

   10 definition: INTTYPE ID '=' expression ';'
   11           | FLOATTYPE ID '=' expression ';'

   12 assignment: ID '=' expression ';'

   13 print_statement: PRINT '(' ID ')' ';'
   14                | PRINT '(' expression ')' ';'

   15 if_statement: IF '(' bool_expression ')' '{' code '}' elif_statements else_statement

   16 elif_statements: ELIF '(' bool_expression ')' '{' code '}' elif_statements
   17                | /* empty */

   18 else_statement: ELSE '{' code '}'
   19               | /* empty */

   20 while_loop: WHILE '(' expression LT expression ')' '{' code '}'

   21 for_loop: FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

   23 bool_expression: expression EQ expression
   24                | expression NOTEQUAL expression
   25                | expression GT expression
   26                | expression GE expression
   27                | expression LT expression
   28                | expression LE expression
   29                | expression

   30 expression: INT
   31           | FLOAT
   32           | ID
   33           | expression PLUS expression
   34           | expression MINUS expression
   35           | expression MUL expression
   36           | expression DIV expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 14 15 16 20 21 22
')' (41) 13 14 15 16 20 21 22
';' (59) 10 11 12 13 14 21 22
'=' (61) 10 11 12
'{' (123) 15 16 18 20 21 22
'}' (125) 15 16 18 20 21 22
error (256)
ID (258) 10 11 12 13 32
INT (259) 30
FLOAT (260) 31
INTTYPE (261) 10
FLOATTYPE (262) 11
PRINT (263) 13 14
IF (264) 15
ELIF (265) 16
ELSE (266) 18
WHILE (267) 20
FOR (268) 21 22
EQ (269) 23
NOTEQUAL (270) 24
GT (271) 25
GE (272) 26
LT (273) 20 21 27
LE (274) 28
PLUS (275) 33
MINUS (276) 34
MUL (277) 35
DIV (278) 36


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
code (32)
    on left: 2 3, on right: 1 2 15 16 18 20 21 22
statement (33)
    on left: 4 5 6 7 8 9, on right: 2
definition (34)
    on left: 10 11, on right: 4
assignment (35)
    on left: 12, on right: 5 21 22
print_statement (36)
    on left: 13 14, on right: 6
if_statement (37)
    on left: 15, on right: 7
elif_statements (38)
    on left: 16 17, on right: 15 16
else_statement (39)
    on left: 18 19, on right: 15
while_loop (40)
    on left: 20, on right: 9
for_loop (41)
    on left: 21 22, on right: 8
bool_expression (42)
    on left: 23 24 25 26 27 28 29, on right: 15 16 22
expression (43)
    on left: 30 31 32 33 34 35 36, on right: 10 11 12 14 20 21 23 24
    25 26 27 28 29 33 34 35 36


state 0

    0 $accept: . program $end
    1 program: . code
    2 code: . statement code
    3     | .  [$end]
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    program          go to state 8
    code             go to state 9
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 1

   12 assignment: ID . '=' expression ';'

    '='  shift, and go to state 17


state 2

   10 definition: INTTYPE . ID '=' expression ';'

    ID  shift, and go to state 18


state 3

   11 definition: FLOATTYPE . ID '=' expression ';'

    ID  shift, and go to state 19


state 4

   13 print_statement: PRINT . '(' ID ')' ';'
   14                | PRINT . '(' expression ')' ';'

    '('  shift, and go to state 20


state 5

   15 if_statement: IF . '(' bool_expression ')' '{' code '}' elif_statements else_statement

    '('  shift, and go to state 21


state 6

   20 while_loop: WHILE . '(' expression LT expression ')' '{' code '}'

    '('  shift, and go to state 22


state 7

   21 for_loop: FOR . '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | FOR . '(' assignment bool_expression ';' assignment ')' '{' code '}'

    '('  shift, and go to state 23


state 8

    0 $accept: program . $end

    $end  shift, and go to state 24


state 9

    1 program: code .

    $default  reduce using rule 1 (program)


state 10

    2 code: . statement code
    2     | statement . code
    3     | .  [$end, '}']
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    code             go to state 25
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 11

    4 statement: definition .

    $default  reduce using rule 4 (statement)


state 12

    5 statement: assignment .

    $default  reduce using rule 5 (statement)


state 13

    6 statement: print_statement .

    $default  reduce using rule 6 (statement)


state 14

    7 statement: if_statement .

    $default  reduce using rule 7 (statement)


state 15

    9 statement: while_loop .

    $default  reduce using rule 9 (statement)


state 16

    8 statement: for_loop .

    $default  reduce using rule 8 (statement)


state 17

   12 assignment: ID '=' . expression ';'
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 29


state 18

   10 definition: INTTYPE ID . '=' expression ';'

    '='  shift, and go to state 30


state 19

   11 definition: FLOATTYPE ID . '=' expression ';'

    '='  shift, and go to state 31


state 20

   13 print_statement: PRINT '(' . ID ')' ';'
   14                | PRINT '(' . expression ')' ';'
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 32
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 33


state 21

   15 if_statement: IF '(' . bool_expression ')' '{' code '}' elif_statements else_statement
   23 bool_expression: . expression EQ expression
   24                | . expression NOTEQUAL expression
   25                | . expression GT expression
   26                | . expression GE expression
   27                | . expression LT expression
   28                | . expression LE expression
   29                | . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    bool_expression  go to state 34
    expression       go to state 35


state 22

   20 while_loop: WHILE '(' . expression LT expression ')' '{' code '}'
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 36


state 23

   12 assignment: . ID '=' expression ';'
   21 for_loop: FOR '(' . assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | FOR '(' . assignment bool_expression ';' assignment ')' '{' code '}'

    ID  shift, and go to state 1

    assignment  go to state 37


state 24

    0 $accept: program $end .

    $default  accept


state 25

    2 code: statement code .

    $default  reduce using rule 2 (code)


state 26

   32 expression: ID .

    $default  reduce using rule 32 (expression)


state 27

   30 expression: INT .

    $default  reduce using rule 30 (expression)


state 28

   31 expression: FLOAT .

    $default  reduce using rule 31 (expression)


state 29

   12 assignment: ID '=' expression . ';'
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41
    ';'    shift, and go to state 42


state 30

   10 definition: INTTYPE ID '=' . expression ';'
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 43


state 31

   11 definition: FLOATTYPE ID '=' . expression ';'
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 44


state 32

   13 print_statement: PRINT '(' ID . ')' ';'
   32 expression: ID .  [PLUS, MINUS, MUL, DIV, ')']

    ')'  shift, and go to state 45

    ')'       [reduce using rule 32 (expression)]
    $default  reduce using rule 32 (expression)


state 33

   14 print_statement: PRINT '(' expression . ')' ';'
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41
    ')'    shift, and go to state 46


state 34

   15 if_statement: IF '(' bool_expression . ')' '{' code '}' elif_statements else_statement

    ')'  shift, and go to state 47


state 35

   23 bool_expression: expression . EQ expression
   24                | expression . NOTEQUAL expression
   25                | expression . GT expression
   26                | expression . GE expression
   27                | expression . LT expression
   28                | expression . LE expression
   29                | expression .  [')']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    EQ        shift, and go to state 48
    NOTEQUAL  shift, and go to state 49
    GT        shift, and go to state 50
    GE        shift, and go to state 51
    LT        shift, and go to state 52
    LE        shift, and go to state 53
    PLUS      shift, and go to state 38
    MINUS     shift, and go to state 39
    MUL       shift, and go to state 40
    DIV       shift, and go to state 41

    $default  reduce using rule 29 (bool_expression)


state 36

   20 while_loop: WHILE '(' expression . LT expression ')' '{' code '}'
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    LT     shift, and go to state 54
    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41


state 37

   21 for_loop: FOR '(' assignment . expression LT expression ';' assignment ')' '{' code '}'
   22         | FOR '(' assignment . bool_expression ';' assignment ')' '{' code '}'
   23 bool_expression: . expression EQ expression
   24                | . expression NOTEQUAL expression
   25                | . expression GT expression
   26                | . expression GE expression
   27                | . expression LT expression
   28                | . expression LE expression
   29                | . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    bool_expression  go to state 55
    expression       go to state 56


state 38

   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   33           | expression PLUS . expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 57


state 39

   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   34           | expression MINUS . expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 58


state 40

   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   35           | expression MUL . expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 59


state 41

   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression
   36           | expression DIV . expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 60


state 42

   12 assignment: ID '=' expression ';' .

    $default  reduce using rule 12 (assignment)


state 43

   10 definition: INTTYPE ID '=' expression . ';'
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41
    ';'    shift, and go to state 61


state 44

   11 definition: FLOATTYPE ID '=' expression . ';'
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41
    ';'    shift, and go to state 62


state 45

   13 print_statement: PRINT '(' ID ')' . ';'

    ';'  shift, and go to state 63


state 46

   14 print_statement: PRINT '(' expression ')' . ';'

    ';'  shift, and go to state 64


state 47

   15 if_statement: IF '(' bool_expression ')' . '{' code '}' elif_statements else_statement

    '{'  shift, and go to state 65


state 48

   23 bool_expression: expression EQ . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 66


state 49

   24 bool_expression: expression NOTEQUAL . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 67


state 50

   25 bool_expression: expression GT . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 68


state 51

   26 bool_expression: expression GE . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 69


state 52

   27 bool_expression: expression LT . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 70


state 53

   28 bool_expression: expression LE . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 71


state 54

   20 while_loop: WHILE '(' expression LT . expression ')' '{' code '}'
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 72


state 55

   22 for_loop: FOR '(' assignment bool_expression . ';' assignment ')' '{' code '}'

    ';'  shift, and go to state 73


state 56

   21 for_loop: FOR '(' assignment expression . LT expression ';' assignment ')' '{' code '}'
   23 bool_expression: expression . EQ expression
   24                | expression . NOTEQUAL expression
   25                | expression . GT expression
   26                | expression . GE expression
   27                | expression . LT expression
   28                | expression . LE expression
   29                | expression .  [';']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    EQ        shift, and go to state 48
    NOTEQUAL  shift, and go to state 49
    GT        shift, and go to state 50
    GE        shift, and go to state 51
    LT        shift, and go to state 74
    LE        shift, and go to state 53
    PLUS      shift, and go to state 38
    MINUS     shift, and go to state 39
    MUL       shift, and go to state 40
    DIV       shift, and go to state 41

    $default  reduce using rule 29 (bool_expression)


state 57

   33 expression: expression . PLUS expression
   33           | expression PLUS expression .  [EQ, NOTEQUAL, GT, GE, LT, LE, PLUS, MINUS, ';', ')']
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    MUL  shift, and go to state 40
    DIV  shift, and go to state 41

    $default  reduce using rule 33 (expression)

    Conflict between rule 33 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 33 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 33 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 33 and token DIV resolved as shift (PLUS < DIV).


state 58

   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   34           | expression MINUS expression .  [EQ, NOTEQUAL, GT, GE, LT, LE, PLUS, MINUS, ';', ')']
   35           | expression . MUL expression
   36           | expression . DIV expression

    MUL  shift, and go to state 40
    DIV  shift, and go to state 41

    $default  reduce using rule 34 (expression)

    Conflict between rule 34 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 34 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 34 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 34 and token DIV resolved as shift (MINUS < DIV).


state 59

   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   35           | expression MUL expression .  [EQ, NOTEQUAL, GT, GE, LT, LE, PLUS, MINUS, MUL, DIV, ';', ')']
   36           | expression . DIV expression

    $default  reduce using rule 35 (expression)

    Conflict between rule 35 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 35 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 35 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 35 and token DIV resolved as reduce (%left DIV).


state 60

   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression
   36           | expression DIV expression .  [EQ, NOTEQUAL, GT, GE, LT, LE, PLUS, MINUS, MUL, DIV, ';', ')']

    $default  reduce using rule 36 (expression)

    Conflict between rule 36 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 36 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 36 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 36 and token DIV resolved as reduce (%left DIV).


state 61

   10 definition: INTTYPE ID '=' expression ';' .

    $default  reduce using rule 10 (definition)


state 62

   11 definition: FLOATTYPE ID '=' expression ';' .

    $default  reduce using rule 11 (definition)


state 63

   13 print_statement: PRINT '(' ID ')' ';' .

    $default  reduce using rule 13 (print_statement)


state 64

   14 print_statement: PRINT '(' expression ')' ';' .

    $default  reduce using rule 14 (print_statement)


state 65

    2 code: . statement code
    3     | .  ['}']
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   15             | IF '(' bool_expression ')' '{' . code '}' elif_statements else_statement
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    code             go to state 75
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 66

   23 bool_expression: expression EQ expression .  [';', ')']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 23 (bool_expression)


state 67

   24 bool_expression: expression NOTEQUAL expression .  [';', ')']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 24 (bool_expression)


state 68

   25 bool_expression: expression GT expression .  [';', ')']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 25 (bool_expression)


state 69

   26 bool_expression: expression GE expression .  [';', ')']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 26 (bool_expression)


state 70

   27 bool_expression: expression LT expression .  [')']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 27 (bool_expression)


state 71

   28 bool_expression: expression LE expression .  [';', ')']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 28 (bool_expression)


state 72

   20 while_loop: WHILE '(' expression LT expression . ')' '{' code '}'
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41
    ')'    shift, and go to state 76


state 73

   12 assignment: . ID '=' expression ';'
   22 for_loop: FOR '(' assignment bool_expression ';' . assignment ')' '{' code '}'

    ID  shift, and go to state 1

    assignment  go to state 77


state 74

   21 for_loop: FOR '(' assignment expression LT . expression ';' assignment ')' '{' code '}'
   27 bool_expression: expression LT . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    expression  go to state 78


state 75

   15 if_statement: IF '(' bool_expression ')' '{' code . '}' elif_statements else_statement

    '}'  shift, and go to state 79


state 76

   20 while_loop: WHILE '(' expression LT expression ')' . '{' code '}'

    '{'  shift, and go to state 80


state 77

   22 for_loop: FOR '(' assignment bool_expression ';' assignment . ')' '{' code '}'

    ')'  shift, and go to state 81


state 78

   21 for_loop: FOR '(' assignment expression LT expression . ';' assignment ')' '{' code '}'
   27 bool_expression: expression LT expression .  [';']
   33 expression: expression . PLUS expression
   34           | expression . MINUS expression
   35           | expression . MUL expression
   36           | expression . DIV expression

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    MUL    shift, and go to state 40
    DIV    shift, and go to state 41
    ';'    shift, and go to state 82

    ';'  [reduce using rule 27 (bool_expression)]


state 79

   15 if_statement: IF '(' bool_expression ')' '{' code '}' . elif_statements else_statement
   16 elif_statements: . ELIF '(' bool_expression ')' '{' code '}' elif_statements
   17                | .  [$end, ID, INTTYPE, FLOATTYPE, PRINT, IF, ELSE, WHILE, FOR, '}']

    ELIF  shift, and go to state 83

    $default  reduce using rule 17 (elif_statements)

    elif_statements  go to state 84


state 80

    2 code: . statement code
    3     | .  ['}']
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   20           | WHILE '(' expression LT expression ')' '{' . code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    code             go to state 85
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 81

   22 for_loop: FOR '(' assignment bool_expression ';' assignment ')' . '{' code '}'

    '{'  shift, and go to state 86


state 82

   12 assignment: . ID '=' expression ';'
   21 for_loop: FOR '(' assignment expression LT expression ';' . assignment ')' '{' code '}'

    ID  shift, and go to state 1

    assignment  go to state 87


state 83

   16 elif_statements: ELIF . '(' bool_expression ')' '{' code '}' elif_statements

    '('  shift, and go to state 88


state 84

   15 if_statement: IF '(' bool_expression ')' '{' code '}' elif_statements . else_statement
   18 else_statement: . ELSE '{' code '}'
   19               | .  [$end, ID, INTTYPE, FLOATTYPE, PRINT, IF, WHILE, FOR, '}']

    ELSE  shift, and go to state 89

    $default  reduce using rule 19 (else_statement)

    else_statement  go to state 90


state 85

   20 while_loop: WHILE '(' expression LT expression ')' '{' code . '}'

    '}'  shift, and go to state 91


state 86

    2 code: . statement code
    3     | .  ['}']
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'
   22         | FOR '(' assignment bool_expression ';' assignment ')' '{' . code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    code             go to state 92
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 87

   21 for_loop: FOR '(' assignment expression LT expression ';' assignment . ')' '{' code '}'

    ')'  shift, and go to state 93


state 88

   16 elif_statements: ELIF '(' . bool_expression ')' '{' code '}' elif_statements
   23 bool_expression: . expression EQ expression
   24                | . expression NOTEQUAL expression
   25                | . expression GT expression
   26                | . expression GE expression
   27                | . expression LT expression
   28                | . expression LE expression
   29                | . expression
   30 expression: . INT
   31           | . FLOAT
   32           | . ID
   33           | . expression PLUS expression
   34           | . expression MINUS expression
   35           | . expression MUL expression
   36           | . expression DIV expression

    ID     shift, and go to state 26
    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28

    bool_expression  go to state 94
    expression       go to state 35


state 89

   18 else_statement: ELSE . '{' code '}'

    '{'  shift, and go to state 95


state 90

   15 if_statement: IF '(' bool_expression ')' '{' code '}' elif_statements else_statement .

    $default  reduce using rule 15 (if_statement)


state 91

   20 while_loop: WHILE '(' expression LT expression ')' '{' code '}' .

    $default  reduce using rule 20 (while_loop)


state 92

   22 for_loop: FOR '(' assignment bool_expression ';' assignment ')' '{' code . '}'

    '}'  shift, and go to state 96


state 93

   21 for_loop: FOR '(' assignment expression LT expression ';' assignment ')' . '{' code '}'

    '{'  shift, and go to state 97


state 94

   16 elif_statements: ELIF '(' bool_expression . ')' '{' code '}' elif_statements

    ')'  shift, and go to state 98


state 95

    2 code: . statement code
    3     | .  ['}']
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   18 else_statement: ELSE '{' . code '}'
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    code             go to state 99
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 96

   22 for_loop: FOR '(' assignment bool_expression ';' assignment ')' '{' code '}' .

    $default  reduce using rule 22 (for_loop)


state 97

    2 code: . statement code
    3     | .  ['}']
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   21         | FOR '(' assignment expression LT expression ';' assignment ')' '{' . code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    code             go to state 100
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 98

   16 elif_statements: ELIF '(' bool_expression ')' . '{' code '}' elif_statements

    '{'  shift, and go to state 101


state 99

   18 else_statement: ELSE '{' code . '}'

    '}'  shift, and go to state 102


state 100

   21 for_loop: FOR '(' assignment expression LT expression ';' assignment ')' '{' code . '}'

    '}'  shift, and go to state 103


state 101

    2 code: . statement code
    3     | .  ['}']
    4 statement: . definition
    5          | . assignment
    6          | . print_statement
    7          | . if_statement
    8          | . for_loop
    9          | . while_loop
   10 definition: . INTTYPE ID '=' expression ';'
   11           | . FLOATTYPE ID '=' expression ';'
   12 assignment: . ID '=' expression ';'
   13 print_statement: . PRINT '(' ID ')' ';'
   14                | . PRINT '(' expression ')' ';'
   15 if_statement: . IF '(' bool_expression ')' '{' code '}' elif_statements else_statement
   16 elif_statements: ELIF '(' bool_expression ')' '{' . code '}' elif_statements
   20 while_loop: . WHILE '(' expression LT expression ')' '{' code '}'
   21 for_loop: . FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}'
   22         | . FOR '(' assignment bool_expression ';' assignment ')' '{' code '}'

    ID         shift, and go to state 1
    INTTYPE    shift, and go to state 2
    FLOATTYPE  shift, and go to state 3
    PRINT      shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    FOR        shift, and go to state 7

    $default  reduce using rule 3 (code)

    code             go to state 104
    statement        go to state 10
    definition       go to state 11
    assignment       go to state 12
    print_statement  go to state 13
    if_statement     go to state 14
    while_loop       go to state 15
    for_loop         go to state 16


state 102

   18 else_statement: ELSE '{' code '}' .

    $default  reduce using rule 18 (else_statement)


state 103

   21 for_loop: FOR '(' assignment expression LT expression ';' assignment ')' '{' code '}' .

    $default  reduce using rule 21 (for_loop)


state 104

   16 elif_statements: ELIF '(' bool_expression ')' '{' code . '}' elif_statements

    '}'  shift, and go to state 105


state 105

   16 elif_statements: . ELIF '(' bool_expression ')' '{' code '}' elif_statements
   16                | ELIF '(' bool_expression ')' '{' code '}' . elif_statements
   17                | .  [$end, ID, INTTYPE, FLOATTYPE, PRINT, IF, ELSE, WHILE, FOR, '}']

    ELIF  shift, and go to state 83

    $default  reduce using rule 17 (elif_statements)

    elif_statements  go to state 106


state 106

   16 elif_statements: ELIF '(' bool_expression ')' '{' code '}' elif_statements .

    $default  reduce using rule 16 (elif_statements)
